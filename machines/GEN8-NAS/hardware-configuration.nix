# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

let
  zfsCompatibleKernelPackages = lib.filterAttrs
    (
      name: kernelPackages:
        (builtins.match "linux_[0-9]+_[0-9]+" name) != null
        && (builtins.tryEval kernelPackages).success
        && (!kernelPackages.${config.boot.zfs.package.kernelModuleAttribute}.meta.broken)
    )
    pkgs.linuxKernel.packages;
  latestKernelPackage = lib.last (
    lib.sort (a: b: (lib.versionOlder a.kernel.version b.kernel.version)) (
      builtins.attrValues zfsCompatibleKernelPackages
    )
  );
in
{
  imports =
    [
      (modulesPath + "/installer/scan/not-detected.nix")
    ];

  # Bootloader.
  boot.loader.grub.enable = true;
  boot.loader.grub.device = "/dev/disk/by-id/wwn-0x500a0751e1d7a3aa";
  boot.loader.grub.useOSProber = true;

  # boot.kernelPackages = pkgs.linuxPackages_latest;
  #boot.kernelPackages = latestKernelPackage;

  boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "nvme" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  boot.kernelParams = [
    "mitigations=off"
    # "i915.force_probe=!46d1"
    # "xe.force_probe=46d1"
  ];

  hardware.graphics = {
    enable = true;
    enable32Bit = true;
    extraPackages = [
      pkgs.vpl-gpu-rt
      pkgs.intel-compute-runtime
      pkgs.ocl-icd
    ];
  };

  # environment.sessionVariables = { LIBVA_DRIVER_NAME = "iHD"; }; # Force intel-media-driver

  programs.nbd.enable = true;

  boot.supportedFilesystems = [ "zfs" ];
  boot.zfs.extraPools = [ "sas-16tb" ];

  # boot.extraModprobeConfig = ''
  #   options zfs zfs_arc_max=8589934592
  # '';
  boot.extraModprobeConfig = ''
    options zfs zfs_prefetch_disable=1
  '';
  
  networking.hostId = "4f1f3795";

  services.zfs.autoScrub = {
    enable = true;
    interval = "weekly";
  };

  fileSystems."/" =
    {
      device = "/dev/disk/by-label/ROOT";
      fsType = "ext4";
    };

  swapDevices =
    [
      #    { device = "/dev/disk/by-uuid/6f808fe4-0c13-4cf2-85d1-1d5cec20ca82"; }
    ];

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
